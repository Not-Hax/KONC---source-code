/*package meow.konc.hack.modules.exploits;

import meow.konc.hack.module.Module;
import meow.konc.hack.util.util.EntityUtil;
import meow.konc.hack.util.other.ReflectionFields;
import meow.konc.hack.util.other.EventReceivePacket;
import meow.konc.hack.util.other.EventTarget;
import net.minecraft.client.Minecraft;
import net.minecraft.network.play.client.CPacketPlayer;
import net.minecraft.network.play.server.SPacketPlayerPosLook;
import net.minecraft.potion.Potion;

import java.util.Objects;

@Module.Info(name = "PacketFly",category = Module.Category.EXPLOITS,description = "null")
public class PacketFly extends Module {

    public void onUpdate() {
        int angle;
        boolean forward = mc.gameSettings.keyBindForward.isKeyDown();
        boolean left = mc.gameSettings.keyBindLeft.isKeyDown();
        boolean right = mc.gameSettings.keyBindRight.isKeyDown();
        boolean back = mc.gameSettings.keyBindBack.isKeyDown();

        if (left && right)
            angle = forward ? 0 : back ? 180 : -1;
        else if (forward && back)
            angle = left ? -90 : (right ? 90 : -1);
        else {
            angle = left ? -90 : (right ? 90 : 0);
            if (forward)
                angle /= 2;
            else if (back)
                angle = 180 - (angle / 2);
        }

        if (angle != -1 && (forward || left || right || back)) {
            float yaw = mc.player.rotationYaw + angle;
            mc.player.motionX = EntityUtil.getRelativeX(yaw) * 0.2f;
            mc.player.motionZ = EntityUtil.getRelativeZ(yaw) * 0.2f;
        }

        mc.player.motionY = 0;
        mc.player.connection.sendPacket(new CPacketPlayer.PositionRotation(mc.player.posX + mc.player.motionX, mc.player.posY + (Minecraft.getMinecraft().gameSettings.keyBindJump.isKeyDown() ? 0.0622 : 0) - (Minecraft.getMinecraft().gameSettings.keyBindSneak.isKeyDown() ? 0.0622 : 0), mc.player.posZ + mc.player.motionZ, mc.player.rotationYaw, mc.player.rotationPitch, false));
        mc.player.connection.sendPacket(new CPacketPlayer.PositionRotation(mc.player.posX + mc.player.motionX, mc.player.posY - 420, mc.player.posZ + mc.player.motionZ, mc.player.rotationYaw, mc.player.rotationPitch, true));

    }

    public static double getBaseMoveSpeed() {
        double baseSpeed = 0.8873D;

        if (mc.player.isPotionActive(Objects.requireNonNull(Potion.getPotionById(1)))) {
            int amplifier = Objects.requireNonNull(mc.player.getActivePotionEffect(Objects.requireNonNull(Potion.getPotionById(1)))).getAmplifier();
            baseSpeed *= (1.0D + 0.2D * (amplifier + 1));
        }

        return baseSpeed;
    }

    @EventTarget
    public void onPacketRecieve(EventReceivePacket event) {
        if (event.getPacket() instanceof SPacketPlayerPosLook) {
            SPacketPlayerPosLook poslook = (SPacketPlayerPosLook) event.getPacket();
            if (mc.player != null && mc.player.rotationYaw != -180.0f && mc.player.rotationPitch != 0.0f) {
                ReflectionFields.setSPacketPlayerPosLookYaw(mc.player.rotationYaw, poslook);
                ReflectionFields.setSPacketPlayerPosLookPitch(mc.player.rotationPitch, poslook);
            }
        }
    }
}*/
