/*package meow.konc.hack.modules.exploits;

import me.zero.alpine.listener.EventHandler;
import me.zero.alpine.listener.Listener;
import meow.konc.hack.event.events.other.PacketEvent;
import meow.konc.hack.module.Module;
import meow.konc.hack.setting.Setting;
import meow.konc.hack.setting.Settings;
import meow.konc.hack.util.other.Timer;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.CPacketKeepAlive;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

/**
 * Created by 086 on 24/01/2018.
 * Edited by Cuhnt on 30/7/2019
 */
/*@Module.Info(name = "PingSpoof", category = Module.Category.EXPLOITS, description = "Cancels server side packets")
public class PingSpoof extends Module {
    private Setting<Integer> pingSpoof = register(Settings.i("Ping", 100));
    HashMap<Packet, Long> packets = new HashMap<>();
    private List<Packet> send = new ArrayList<>();
    Timer timer = new Timer();
    @EventHandler
    public Listener<PacketEvent.Send> listener = new Listener<>(event -> {
        if (send.contains(event.getPacket())) {
            send.remove(event.getPacket());
            return;
        }
        if (mc.player != null && !mc.isSingleplayer() && mc.player.isEntityAlive() && event.getPacket() instanceof CPacketKeepAlive) {
            event.cancel();
            packets.put(event.getPacket(), timer.getTime());
        }
    });

    @Override
    public void onUpdate() {
        List<Packet> sent = new ArrayList<>();
        packets.forEach((k, v) -> {
            if (timer.timePassed(v) > pingSpoof.getValue()) {
                send.add(k);
                mc.player.connection.sendPacket(k);
                sent.add(k);
            }
        });
        for (Packet w : sent) {
            packets.remove(w);
        }
    }
    @Override
    public String getHudInfo() {
        return String.valueOf(pingSpoof.getValue());
    }

}*/
